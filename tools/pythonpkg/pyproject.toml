[build-system]
requires = ["scikit-build-core >=0.4.3", "nanobind >=1.3.2"]
build-backend = "scikit_build_core.build"

### CI Builwheel configurations ###

# Default config runs all tests and requires at least one extension to be tested against
[tool.cibuildwheel]
dependency-versions = "latest"
environment = "PIP_CONSTRAINT='build-constraints.txt'"
before-build = 'pip install oldest-supported-numpy'
before-test = 'python scripts/optional_requirements.py'
test-requires = 'pytest'
test-command = 'DUCKDB_PYTHON_TEST_EXTENSION_PATH={project} DUCKDB_PYTHON_TEST_EXTENSION_REQUIRED=1 python -m pytest {project}/tests --verbose'

# For musllinux we currently don't build extensions yet
[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
test-command = "python -m pytest {project}/tests/fast --verbose"

# For 32 bit we don't build extensions
[[tool.cibuildwheel.overrides]]
select = "*i686*"
test-command = "python -m pytest {project}/tests/fast --verbose"

# For aarch64 we don't build extensions
[[tool.cibuildwheel.overrides]]
select = "*aarch64*"
test-command = "python -m pytest {project}/tests/fast --verbose"

[tool.cibuildwheel.windows]
archs = ["AMD64"]
test-command = "python -m pytest {project}/tests/fast --verbose"

# See https://github.com/duckdblabs/duckdb-internal/issues/1923 for context
[tool.cibuildwheel.macos]
before-test = 'python scripts/optional_requirements.py --exclude polars --exclude tensorflow'
